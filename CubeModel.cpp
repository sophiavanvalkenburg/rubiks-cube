#include "CubeModel.h"
#include <vector>
#include <glm/glm.hpp>
#include <GL/glew.h>

const GLfloat CubeModel::vertices[] = {
    /*** P:180 / Y:0 ***/
    -0.15f, -0.15f, -0.15f, 0.0f, 1.0f, 1.0f, 
    0.15f, -0.15f, -0.15f,  0.0f, 1.0f, 1.0f,
    0.15f,  0.15f, -0.15f, 0.0f, 1.0f, 1.0f,
    0.15f,  0.15f, -0.15f,  0.0f, 1.0f, 1.0f,
    -0.15f,  0.15f, -0.15f,  0.0f, 1.0f, 1.0f,
    -0.15f, -0.15f, -0.15f,  0.0f, 1.0f, 1.0f,

    /*** P:0 / Y:0 ***/
    -0.15f, -0.15f,  0.15f,  1.0f, 0.0f, 0.0f,
    0.15f, -0.15f,  0.15f,  1.0f, 0.0f, 0.0f,
    0.15f,  0.15f,  0.15f,  1.0f, 0.0f, 0.0f,
    0.15f,  0.15f,  0.15f,  1.0f, 0.0f, 0.0f,
    -0.15f,  0.15f,  0.15f, 1.0f, 0.0f, 0.0f,
    -0.15f, -0.15f,  0.15f, 1.0f, 0.0f, 0.0f,

    /*** P:0 / Y:90 ***/
    -0.15f,  0.15f,  0.15f,  0.0f, 1.0f, 0.0f,
    -0.15f,  0.15f, -0.15f,  0.0f, 1.0f, 0.0f,
    -0.15f, -0.15f, -0.15f,  0.0f, 1.0f, 0.0f,
    -0.15f, -0.15f, -0.15f,  0.0f, 1.0f, 0.0f,
    -0.15f, -0.15f,  0.15f,  0.0f, 1.0f, 0.0f,
    -0.15f,  0.15f,  0.15f,  0.0f, 1.0f, 0.0f,

    /*** P:0 / Y:270 ***/
    0.15f,  0.15f,  0.15f,  0.0f, 0.0f, 1.0f,
    0.15f,  0.15f, -0.15f,  0.0f, 0.0f, 1.0f,
    0.15f, -0.15f, -0.15f,  0.0f, 0.0f, 1.0f,
    0.15f, -0.15f, -0.15f,  0.0f, 0.0f, 1.0f,
    0.15f, -0.15f,  0.15f,  0.0f, 0.0f, 1.0f,
    0.15f,  0.15f,  0.15f,  0.0f, 0.0f, 1.0f,

    /*** P:270 / Y:0 ***/
    -0.15f, -0.15f, -0.15f,  1.0f, 0.0f, 1.0f,
    0.15f, -0.15f, -0.15f,  1.0f, 0.0f, 1.0f,
    0.15f, -0.15f,  0.15f,  1.0f, 0.0f, 1.0f,
    0.15f, -0.15f,  0.15f,  1.0f, 0.0f, 1.0f,
    -0.15f, -0.15f,  0.15f, 1.0f, 0.0f, 1.0f,
    -0.15f, -0.15f, -0.15f, 1.0f, 0.0f, 1.0f,

    /*** P:90 / Y:0 ***/
    -0.15f,  0.15f, -0.15f, 1.0f, 1.0f, 0.0f,
    0.15f,  0.15f, -0.15f,  1.0f, 1.0f, 0.0f,
    0.15f,  0.15f,  0.15f,  1.0f, 1.0f, 0.0f,
    0.15f,  0.15f,  0.15f,  1.0f, 1.0f, 0.0f,
    -0.15f,  0.15f,  0.15f, 1.0f, 1.0f, 0.0f,
    -0.15f,  0.15f, -0.15f,  1.0f, 1.0f, 0.0f
};

const GLfloat* CubeModel::getVertices(){
    return CubeModel::vertices;
};

size_t CubeModel::getSizeOfVertices(){
    return sizeof(CubeModel::vertices);
};

std::vector<glm::vec3> CubeModel::getBoundingBox(){
    return {};
};